{"version":3,"file":"designsystem-marianasilva.cjs.production.min.js","sources":["../src/components/ABbutton/index.tsx","../src/components/Card/index.tsx","../src/components/Tag/index.tsx","../src/components/ABInput/index.tsx","../src/components/ABOptionGroup/index.tsx","../src/components/ABInputQuant/index.tsx","../src/components/ButtonSuccess/index.tsx","../src/components/ButtonDanger/index.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport interface ABbuttonProps {\r\n    text?: string\r\n    color?: 'Primary' | 'Secondary'\r\n    onClick?: () => void\r\n    size?: 'small' | 'large'\r\n}\r\n\r\nconst ButtonStyled = styled.button<ABbuttonProps>`\r\n    background-color: ${(props: ABbuttonProps) => props.color === 'Primary' ? '#EB9B00' : '#FFFFFF'};\r\n    padding: ${(props: ABbuttonProps) => props.size === 'large' ? '16px 32px' : '8px 16px'};\r\n    border: 2px solid #EB9B00;\r\n    color: ${(props: ABbuttonProps) => props.color === 'Primary' ? '#FFFFFF' : '#EB9B00'};\r\n    cursor: pointer;\r\n    font-size: ${(props: ABbuttonProps) => props.size === 'large' ? '20px' : '14px'};\r\n    border-radius: 3px;\r\n    transition: background-color 0.75s, border-color 0.75s, color 0.75s;\r\n\r\n    &:hover {\r\n        background-color: ${(props: ABbuttonProps) => props.color === 'Primary' ? '#B87900' : '#FFFFFF'} ;\r\n        border-color: #B87900;\r\n        color: ${(props: ABbuttonProps) => props.color === 'Primary' ? '#FFFFFF' : '#B87900'};\r\n        transition: background-color 0.75s, border-color 0.75s, color 0.75s;\r\n    }\r\n`\r\n\r\nexport const ABbutton = ({ color = 'Primary', text, size = 'large', onClick}: ABbuttonProps) => {\r\n    return (<ButtonStyled onClick={onClick} color={color} size={size} >{text}</ButtonStyled>)\r\n}","import React, { ReactNode } from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nexport interface CardProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst CardStyled = styled.div`\r\n    padding: 48px;\r\n    background: #FFFFFF;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const Card = ({ children }: CardProps) => {\r\n    return (\r\n        <CardStyled>\r\n            {children}\r\n        </CardStyled>\r\n    )\r\n}","import React from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nexport interface ABTagProps {\r\n    texto: string\r\n}\r\n\r\nconst TagStyled = styled.div`\r\n    padding: 14px 22px;\r\n    color: #FFFFFF;\r\n    background: #EB9B00;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    display: inline-block;\r\n    font-family: sans-serif;\r\n`\r\n\r\nexport const ABTag = ({ texto }: ABTagProps) => {\r\n    return (\r\n        <TagStyled>\r\n            {texto}\r\n        </TagStyled>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LabelStyled = styled.label`\r\n    color: #002F52;\r\n    display: block;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    margin-left: 16px;\r\n    margin-bottom: 8px\r\n`\r\n\r\nconst InputStyled = styled.input`\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    padding: 8px 24px;\r\n    color: #002F52;\r\n    border: 1px solid #002F52;\r\n    border-radius: 45px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nexport interface InputProps {\r\n    label: string;\r\n    value: string;\r\n    type?: 'text' | 'email' | 'password' | 'date';\r\n    onChange: (value: string) => void\r\n}\r\n\r\nexport const ABInput = ({ label, value, onChange, type = 'text' } : InputProps) => {\r\n    return (\r\n        <div>\r\n            <LabelStyled>\r\n                {label}\r\n            </LabelStyled>\r\n            <InputStyled type={type} value={value} onChange={event => onChange(event.target.value)} />\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SectionStyled = styled.section<{ selecionado: boolean }>`\r\n    width: 194px;\r\n    height: 88px;\r\n    background: ${props => props.selecionado ? 'linear-gradient(97.54deg, #002F52 35.49%, #326589 165.37%)' : '#FFFFFF'};\r\n    border: 1px solid;\r\n    border-color: ${props => props.selecionado ? '#002F52' : '#EB9B00'};\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n    margin: 10px;\r\n    font-family: sans-serif;\r\n    cursor: pointer;\r\n    header {\r\n        color: ${props => props.selecionado ? '#FFF' : '#EB9B00'};\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n    }\r\n    strong {\r\n        color: ${props => props.selecionado ? '#FFF' : '#EB9B00'};;\r\n        font-weight: 700;\r\n        font-size: 16px;\r\n    }\r\n    footer {\r\n        color: ${props => props.selecionado ? '#FFF' : 'rgba(0, 0, 0, 0.54)'};;\r\n        font-weight: 400;\r\n        font-size: 12px;\r\n    }\r\n`\r\n\r\nexport interface AbGroupOption {\r\n    id: number\r\n    title: string\r\n    body: string\r\n    footer: string\r\n}\r\n\r\nexport interface ABOptionGroupProps {\r\n    options: AbGroupOption[]\r\n    valueDefault?: AbGroupOption | null\r\n    onChange?: (option: AbGroupOption) => void\r\n}\r\n\r\nexport const ABOptionGroup = ({ options, onChange , valueDefault} : ABOptionGroupProps) => {\r\n    const [selected, setSelected] = useState<AbGroupOption | null>(valueDefault ?? null)\r\n    const onSelect = (option: AbGroupOption): void => {\r\n        setSelected(option);\r\n        onChange &&  onChange(option)\r\n    }\r\n\r\n    return (<>\r\n        {options.map(option => \r\n            <SectionStyled\r\n                onClick={() => onSelect(option)}\r\n                key={option.id}\r\n                selecionado={selected?.id == option.id}\r\n            >\r\n                <header>\r\n                    {option.title}\r\n                </header>\r\n                <div>\r\n                    <strong>{option.body}</strong>\r\n                </div>\r\n                <footer>\r\n                    {option.footer}\r\n                </footer>\r\n            </SectionStyled>\r\n        )}\r\n    </>)\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.button`\r\n    background: #002F52;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\r\n    border: none;\r\n    cursor: pointer;\r\n    color: #FFF;\r\n    width: 28px;\r\n    height: 28px;\r\n    border-radius: 50%;\r\n`\r\nconst SpanStyled = styled.span`\r\n    font-size: 18px;\r\n    line-height: 27px;\r\n    display: inline-block;\r\n    margin: 0 12px;\r\n    color: #002F52;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`\r\n\r\nconst FlexContainerStyled = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst ContainerStyled = styled.div`\r\n    width: 100px;\r\n    text-align: center;\r\n    display: inline-block;\r\n`\r\n\r\nconst LabelStyled = styled.label`\r\n    color: #002F52;\r\n    display: block;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    margin-bottom: 8px;\r\n`\r\n\r\nexport interface AbInputQuantProps {\r\n    onChange?: (value:number) => void\r\n}\r\n\r\nexport const AbInputQuant = ({ onChange } : AbInputQuantProps) => {\r\n    const [value, setValue] = useState(1)\r\n\r\n    useEffect(() => {\r\n        if (onChange) {            \r\n            onChange(Number(value))\r\n        }\r\n    }, [value])\r\n\r\n    return (\r\n        <ContainerStyled>\r\n            <LabelStyled>Quantidade</LabelStyled>\r\n            <FlexContainerStyled>\r\n                <ButtonStyled onClick={() => setValue(prev => prev - 1)}>\r\n                    -\r\n                </ButtonStyled>\r\n                <SpanStyled>\r\n                    {value}\r\n                </SpanStyled>\r\n                <ButtonStyled onClick={() => setValue(prev => prev + 1)}>\r\n                    +\r\n                </ButtonStyled>\r\n            </FlexContainerStyled>\r\n        </ContainerStyled>\r\n    )\r\n}","import React, { ButtonHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ButtonSuccessProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  label?: string\r\n  variant?: 'solid' | 'outlined'\r\n  size?: 'small' | 'medium' | 'large'\r\n  onClick?: () => void\r\n}\r\n\r\nconst ButtonStyled = styled.button<ButtonSuccessProps>`\r\n  font-family: sans-serif;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${(props: ButtonSuccessProps) => props.variant === 'solid' ? '#65c944' : 'transparent'} ;\r\n  color: ${(props: ButtonSuccessProps) => props.variant === 'solid' ? '#ffffff' : '#65c944'};\r\n  border: 1px solid #65c944;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 7.5px 15px;\r\n  min-width: ${(props: ButtonSuccessProps) => props.size === 'small' ? '120px' : props.size === 'medium' ?  '180px' : '220px' } ;\r\n  height: ${(props: ButtonSuccessProps) => props.size === 'small' ? '32px' : props.size === 'medium' ? '40px' : '48px' };\r\n  transition: background-color 0.75s, border-color 0.75s, box-shadow 0.75s,\r\n    color 0.75s;\r\n\r\n  &:disabled {\r\n    pointer-events: none;\r\n    background-color: ${(props: ButtonSuccessProps) => props.variant === 'solid' ? '#21a53740' : 'transparent'} ;\r\n    border-color: #21a53740;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: '#1c7e2c';\r\n    border-color: #1c7e2c;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${(props: ButtonSuccessProps) => props.variant === 'solid' ? '#1c7e2c' : 'transparent'};\r\n    box-shadow: 0 0 0 3.5px #1c7e2c;\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nexport const ButtonSuccess = ({ label, size, variant, onClick}: ButtonSuccessProps) => {\r\n  return (<ButtonStyled onClick={onClick} variant={variant} size={size} >\r\n            {label}\r\n          </ButtonStyled>)\r\n}\r\n\r\n\r\n\r\n","import React, { ButtonHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ButtonDangerProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  label?: string\r\n  variant?: 'solid' | 'outlined'\r\n  size?: 'small' | 'medium' | 'large'\r\n  onClick?: () => void\r\n}\r\n\r\nconst ButtonStyled = styled.button<ButtonDangerProps>`\r\n  font-family: sans-serif;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${(props: ButtonDangerProps) => props.variant === 'solid' ? '#de5856' : 'transparent'} ;\r\n  color: ${(props: ButtonDangerProps) => props.variant === 'solid' ? '#ffffff' : '#de5856'};\r\n  border: 1px solid #d34644;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 7.5px 15px;\r\n  min-width: ${(props: ButtonDangerProps) => props.size === 'small' ? '120px' : props.size === 'medium' ?  '180px' : '220px' } ;\r\n  height: ${(props: ButtonDangerProps) => props.size === 'small' ? '32px' : props.size === 'medium' ? '40px' : '48px' };\r\n  transition: background-color 0.75s, border-color 0.75s, box-shadow 0.75s,\r\n    color 0.75s;\r\n\r\n  &:disabled {\r\n    pointer-events: none;\r\n    background-color: ${(props: ButtonDangerProps) => props.variant === 'solid' ? '#ef535040' : 'transparent'} ;\r\n    border-color: #ef535040;\r\n  }\r\n\r\n    &:focus {\r\n          background-color: ${(props: ButtonDangerProps) => props.variant === 'solid' ? '#ce4b49' : 'transparent'};\r\n          box-shadow: 0 0 0 3.5px #ce4b49;\r\n          font-weight: 600;\r\n    }\r\n\r\n    &:hover {\r\n          background-color: '#ce4b49';\r\n          border-color: #ce4b49;\r\n        }\r\n  `\r\n\r\nexport const ButtonDanger = ({\r\n    label, size, variant, onClick\r\n  }: ButtonDangerProps) =>  { \r\n\r\n  return (\r\n    <ButtonStyled  size={size} variant={variant} onClick={onClick}>\r\n      {label}\r\n    </ButtonStyled>\r\n  )\r\n}\r\n\r\n  \r\n\r\n","import React, { FC, HTMLAttributes, ReactChild } from 'react';\r\n\r\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\r\n  /** custom content, defaults to 'the snozzberries taste like snozzberries' */\r\n  children?: ReactChild;\r\n}\r\n\r\n\r\nexport const Thing: FC<Props> = ({ children }) => {\r\n  return <div>{children || `the snozzberries taste like snozzberries`}</div>;\r\n};\r\n\r\nexport * from './components/ABbutton'\r\nexport * from './components/Card'\r\nexport * from './components/Tag'\r\nexport * from './components/ABInput'\r\nexport * from './components/ABOptionGroup'\r\nexport * from './components/ABInputQuant'\r\nexport * from './components/ButtonSuccess'\r\nexport * from './components/ButtonDanger'"],"names":["ButtonStyled","styled","button","props","color","size","CardStyled","div","TagStyled","LabelStyled","label","InputStyled","input","SectionStyled","section","selecionado","SpanStyled","span","FlexContainerStyled","ContainerStyled","variant","value","onChange","type","React","event","target","options","valueDefault","useState","selected","setSelected","map","option","onClick","onSelect","key","id","title","body","footer","texto","text","setValue","useEffect","Number","prev","children"],"mappings":"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"}